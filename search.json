[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analyzing Ecological Networks",
    "section": "",
    "text": "Welcome\nThe objective of this five-day course, co-organized by the FRB-CESAB and the ANR ECONET, is to train young researchers in analyzing ecological network data. The course covers a general introduction to networks, classical metrics (including modularity, nesteness, clustering), null models, generative models (including SBM), multilayer networks, as well as an overview of newer techniques (such as embedding). Each topic is explored through lectures followed by practicals.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#program",
    "href": "index.html#program",
    "title": "Analyzing Ecological Networks",
    "section": "Program",
    "text": "Program\nClasses will run from 9am to 5:30pm every day except Friday, when we finish at 4pm.\n\nMonday April 22nd 2024: Introduction\n9:00: Welcome\n9:30: Introduction to networks\n10:30: Coffee break\n11:00: What kind of networks in ecology ?\n11:30: How are ecological network data collected ?\n12:00: Lunch break\n13:30: “Speed dating”\n14:30: igraph\n15:30: Coffee break\n16:00: What determines interactions in ecological networks?\n17:30: End of the working day\n\n\nTuesday April 24th 2024 - Network metrics and null models\n9:00: Metrics\n10:30: Coffee break\n11:00: Network models, null models\n12:00: Lunch break\n14:00: Complexity stability\n15:00: The structure of ecological networks: what do we know?\n16:00: Coffee break\n16:30: Group projects\n17:30: End of the working day\n\n\nWednesday April 25th 2024 - Generative Stochastic Models\n9:00: Introduction to block models\n10:30: Coffee break\n11:00: Selecting the number of blocks\n12:00: Lunch break\n14:00: The structure of ecological networks: what do we know? (2)\n15:00: Coffee break\n15:30: Group projects\n17:30: End of the working day\n\n\nThursday April 26th 2024 - Multilayer networks\n9:00: Multilayer networks in ecology\n10:30: Coffee break\n11:00: Multilayer in practice\n12:00: Lunch break\n14:00: Group projects\n17:30: End of the working day\n\n\nFriday April 27th 2024 - Opening and group presentations\n9:00: Motifs, embedding, collection of networks\n10:30: Coffee break\n11:00: finalizing presentations\n12:00: Lunch break at the CESAB\n14:00: Group project presentations\n16:30: End of the workshop",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Analyzing Ecological Networks",
    "section": "Prerequisites",
    "text": "Prerequisites\n  Please follow this tutorial to install your working environment before attending the training course. Only R, RStudio Desktop, and Rtools (for Windows users) are required for this course.\nYou also need to create an account on GitHub.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#material",
    "href": "index.html#material",
    "title": "Analyzing Ecological Networks",
    "section": "Material",
    "text": "Material\nExercises done during the training course are available at: https://github.com/econetoolbox/\nAll the data and extra functions needed during the course are available at: https://github.com/econetoolbox/data",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#the-lecturers",
    "href": "index.html#the-lecturers",
    "title": "Analyzing Ecological Networks",
    "section": "The lecturers",
    "text": "The lecturers\nSophie DONNET (INRAE, MIA Paris Saclay)\nSonia KEFI (CNRS, ISEM, Montpellier)\nFrançois MASSOL (CNRS, CIIL, Lille)\nCatherine MATIAS (CNRS, Sorbonne U., LPSM, Paris)\nElisa THEBAULT (CNRS, iEES, Paris)\nStéphane Robin (Sorbonne U., LPSM, Paris)",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#contributions",
    "href": "index.html#contributions",
    "title": "Analyzing Ecological Networks",
    "section": "Contributions",
    "text": "Contributions\nIf you see mistakes or want to suggest changes, please create an issue on the source repository.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#reuse",
    "href": "index.html#reuse",
    "title": "Analyzing Ecological Networks",
    "section": "Reuse",
    "text": "Reuse\nText and figures are licensed under Creative Commons Attribution CC By 4.0, unless otherwise noted.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#see-also",
    "href": "index.html#see-also",
    "title": "Analyzing Ecological Networks",
    "section": "See also",
    "text": "See also\nDiscover the other training courses provided by the FRB-CESAB and its partners: https://frbcesab.github.io/training-courses/",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "chapters/setting-up-r.html",
    "href": "chapters/setting-up-r.html",
    "title": "Setting up R",
    "section": "",
    "text": "The guide to correctly install and configure a working environment for data science with , , and  is available at: https://frbcesab.github.io/rsetup/",
    "crumbs": [
      "PREREQUISITES",
      "Setting up R"
    ]
  },
  {
    "objectID": "chapters/install-packages.html",
    "href": "chapters/install-packages.html",
    "title": "R packages to install",
    "section": "",
    "text": "Here is a list of packages that you need to install so that you can follow the practicals. You can use install.packages(name-package).\n\nFor day 2\n\nlibrary(bipartite)\nlibrary(igraph)\nlibrary(FWebs)\nlibrary(vegan)\nlibrary(cheddar)\nlibrary(matlib)\nlibrary(sbm)\nlibrary(alluvial)\nlibrary(econetwork)\nlibrary(poweRlaw)\n\nMac users won’t be able to install the package FWebs. They can use the file crutch_functions.R (available on the data repository of the course in the day2_files folder), which contains the needed functions.\nIn the course script, there is also an alternative to get the database of all the food webs that are in this package, but it requires to have rmangal installed:\n\nlibrary(rmangal)\nmg1 &lt;- create.fw.list(db=\"mg\", ref=TRUE, spatial = TRUE)\n\n\n\nFor days 3 and 4\n\nremotes::install_github(\"Jo-Theo/shinySbm\")\nremotes::install_github(\"Chabert-Liddell/colSBM\")\nlibrary(colSBM)\nlibrary(network)\nlibrary(GGally)\nlibrary(RColorBrewer)\nlibrary(knitr)",
    "crumbs": [
      "PREREQUISITES",
      "R packages to install"
    ]
  },
  {
    "objectID": "chapters/day1_intro.html",
    "href": "chapters/day1_intro.html",
    "title": "[d1] Introduction to networks",
    "section": "",
    "text": "Author: Catherine Matias   Source: https://github.com/econetoolbox/data/tree/main/day1_files/   Slides: https://econetoolbox.github.io/chapters/cours/day1_cours1_intro.pdf",
    "crumbs": [
      "COURSES",
      "[d1] Introduction to networks"
    ]
  },
  {
    "objectID": "chapters/day1_what-eco-net.html",
    "href": "chapters/day1_what-eco-net.html",
    "title": "[d1] What net. in ecology?",
    "section": "",
    "text": "Author: Sonia Kéfi   Slides: https://econetoolbox.github.io/chapters/cours/day1_cours2_WhatNetworks.pdf",
    "crumbs": [
      "COURSES",
      "[d1] What net. in ecology?"
    ]
  },
  {
    "objectID": "chapters/day1_what-eco-net2.html",
    "href": "chapters/day1_what-eco-net2.html",
    "title": "[d1] What data?",
    "section": "",
    "text": "Author: Elisa Thébault   Slides: https://econetoolbox.github.io/chapters/cours/day1_cours3_WhatNetworks.pdf",
    "crumbs": [
      "COURSES",
      "[d1] What data?"
    ]
  },
  {
    "objectID": "chapters/day1_why-net.html",
    "href": "chapters/day1_why-net.html",
    "title": "[d1] What questions?",
    "section": "",
    "text": "Author: Elisa Thébault   Slides: https://econetoolbox.github.io/chapters/cours/day1_cours4_WhyNetworks.pdf",
    "crumbs": [
      "COURSES",
      "[d1] What questions?"
    ]
  },
  {
    "objectID": "chapters/day2_metrics.html",
    "href": "chapters/day2_metrics.html",
    "title": "[d2] Net. metrics",
    "section": "",
    "text": "Author: François Massol   Source: https://github.com/econetoolbox/data/tree/main/day2_files/   Slides: https://econetoolbox.github.io/chapters/cours/day2_cours_metrics.pdf",
    "crumbs": [
      "COURSES",
      "[d2] Net. metrics"
    ]
  },
  {
    "objectID": "chapters/day2_complex-stab.html",
    "href": "chapters/day2_complex-stab.html",
    "title": "[d2] Complexity-stability",
    "section": "",
    "text": "Author: Sonia Kéfi   Slides: https://econetoolbox.github.io/chapters/cours/day2_cours2_complexStab.pdf",
    "crumbs": [
      "COURSES",
      "[d2] Complexity-stability"
    ]
  },
  {
    "objectID": "chapters/day2_eco-net-structure.html",
    "href": "chapters/day2_eco-net-structure.html",
    "title": "[d2] Ecological net. structure",
    "section": "",
    "text": "Author: Elisa Thébault   Slides: https://econettoolbox.github.io/chapters/cours/day2_cours3_WhatStructure.pdf",
    "crumbs": [
      "COURSES",
      "[d2] Ecological net. structure"
    ]
  },
  {
    "objectID": "chapters/day3_sbm.html",
    "href": "chapters/day3_sbm.html",
    "title": "[d3] SBM",
    "section": "",
    "text": "Author: Sophie Donnet   Source: https://github.com/econetoolbox/data/tree/main/day3_files/   Slides: https://econetoolbox.github.io/chapters/cours/day3_cours_SBM_LBM.pdf",
    "crumbs": [
      "COURSES",
      "[d3] SBM"
    ]
  },
  {
    "objectID": "chapters/day4_multilevel.html",
    "href": "chapters/day4_multilevel.html",
    "title": "[d4] Multilevel",
    "section": "",
    "text": "Author: Sophie Donnet   Source: https://github.com/econetoolbox/data/tree/main/day4_files/   Slides: https://econetoolbox.github.io/chapters/cours/day4_cours_multilevels.pdf",
    "crumbs": [
      "COURSES",
      "[d4] Multilevel"
    ]
  },
  {
    "objectID": "chapters/day5_collection.html",
    "href": "chapters/day5_collection.html",
    "title": "[d5] Collection of networks",
    "section": "",
    "text": "Author: Sophie Donnet   Slides: https://econetoolbox.github.io/chapters/cours/day5_cours_collection.pdf",
    "crumbs": [
      "COURSES",
      "[d5] Collection of networks"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html",
    "href": "chapters/TutorialBM.html",
    "title": "Tutorial on Stochastic Block Models",
    "section": "",
    "text": "0.Requirements\nThis tutorial illustrates the use of block models for the analysis of (ecological) network. Is is mainly based on the vignette of the package sbm. The package is on the CRAN. Its development version is on Github.\ninstall.packages(\"sbm\")\ninstall.packages(\"GGally\") # To plot networks\ninstall.packages('network')\ninstall.packages('RColorBrewer') # to have nice colors\ninstall.packages('knitr') # to plot nice tables\nThe packages required for the analysis are sbm plus some others for data manipulation and representation:\nlibrary(sbm)\nlibrary(ggplot2)\nlibrary(network)\nlibrary(GGally)\nlibrary(RColorBrewer)\nlibrary(knitr)",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html#a.-community-network",
    "href": "chapters/TutorialBM.html#a.-community-network",
    "title": "Tutorial on Stochastic Block Models",
    "section": "1.A. Community network",
    "text": "1.A. Community network\nFirst define the parameters.\n\nK = 3;  # nb of blocks\nnbNodes  &lt;- 50 # nb of vertices \nblockProp &lt;- c(.25, 0.5 ,.25) # group proportions\nconnectParam &lt;- list(mean = diag(.4, 3) + 0.05) # connectivity matrix: affiliation network\n\nWe can now simulate with the sampleSimpleSBM function.\n\nmySampler &lt;- sampleSimpleSBM(nbNodes, blockProp = blockProp, connectParam = connectParam , model = 'bernoulli',directed = TRUE, dimLabels = 'Species')\nmySampler\n#&gt; Simple Stochastic Block Model -- bernoulli variant\n#&gt; =====================================================================\n#&gt; Dimension = ( 50 ) - ( 3 ) blocks and no covariate(s).\n#&gt; =====================================================================\n#&gt; * Useful fields \n#&gt;   $nbNodes, $modelName, $dimLabels, $nbBlocks, $nbCovariates, $nbDyads\n#&gt;   $blockProp, $connectParam, $covarParam, $covarList, $covarEffect \n#&gt;   $expectation, $indMemberships, $memberships \n#&gt; * R6 and S3 methods \n#&gt;   $rNetwork, $rMemberships, $rEdges, plot, print, coef\n\nWe represent the data using either the adjacency matrix or the graphe representation.\n\ncolSet &lt;- RColorBrewer::brewer.pal(n = 8, name = \"Set2\") \nGGally::ggnet2(mySampler$networkData,label = TRUE,color=colSet[1])\n\n\n\n\n\n\n\n\nplotOptions &lt;- list(colNames = TRUE, rowNames = TRUE)\nsbm::plotMyMatrix(mySampler$networkData,dimLabels = list(row = \"species\", col = \"species\"),plotOptions = plotOptions)\n\n\n\n\n\n\n\n\nA few modification as to be done if we want to highlight the blocs.\n\nU &lt;- order(mySampler$memberships)\nZ &lt;- mySampler$memberships[U]\nmyMat &lt;- mySampler$networkData[U,U]\nnet = network(myMat, directed = TRUE)\nmy_color_nodes_col &lt;- my_color_nodes &lt;- rep(colSet[1],nbNodes)\nfor (k in 2:K){\n  my_color_nodes[nbNodes-which(Z==k) + 1] &lt;- colSet[k]\n  my_color_nodes_col[which(Z==k)] &lt;- colSet[k]\n}\nggnet2(net,node.color =  Z, palette = \"Set2\",label = TRUE,arrow.size = 6, arrow.gap = 0.017,label.size = 3)\n\n\n\n\n\n\n\nsbm::plotMyMatrix(myMat,dimLabels = list(row = \"species\", col = \"species\"),plotOptions = plotOptions)+ theme(axis.text.x = element_text(color=my_color_nodes_col),axis.text.y = element_text(color=my_color_nodes))\n#&gt; Warning: Vectorized input to `element_text()` is not officially supported.\n#&gt; ℹ Results may be unexpected or may change in future versions of ggplot2.\n#&gt; Vectorized input to `element_text()` is not officially supported.\n#&gt; ℹ Results may be unexpected or may change in future versions of ggplot2.\n\n\n\n\n\n\n\n\nExercice Modify the structure by choosing other parameters and compute the statistics that you learned the previous days. Use igraph to plot your new networks. For instance, you may try to simulate a foodweb with 5 trophic levels.",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html#b.-bipartite-networks",
    "href": "chapters/TutorialBM.html#b.-bipartite-networks",
    "title": "Tutorial on Stochastic Block Models",
    "section": "1.B. Bipartite networks",
    "text": "1.B. Bipartite networks\nExercice Use the function sampleBipartiteSBM to simulate a weighted (counts) bipartite network with the following parameters.\n\nK = 3;  # nb of blocks\nL = 4\nnbNodes  &lt;- c(50,80) # nb of vertices \nblockProp &lt;- list(row = c(.25, 0.5 ,.25),col=c(0.1,0.3,0.4,0.2)) # group proportions\nmeans &lt;- matrix(rbinom(K*L, 30, 0.25), K, L)  # connectivity matrix\nmeans[3,2] = means[1,4] = 0\nconnectParam &lt;- list(mean = means)",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html#a.-the-data-set-antagonistic-treefungus-interaction-network",
    "href": "chapters/TutorialBM.html#a.-the-data-set-antagonistic-treefungus-interaction-network",
    "title": "Tutorial on Stochastic Block Models",
    "section": "2.A. The data set: antagonistic tree/fungus interaction network",
    "text": "2.A. The data set: antagonistic tree/fungus interaction network\nWe consider the fungus-tree interaction network studied by Vacher, Piou, and Desprez-Loustau (2008), available with the package sbm :\n\ndata(\"fungusTreeNetwork\")\nstr(fungusTreeNetwork,  max.level = 1)\n#&gt; List of 5\n#&gt;  $ tree_names  : Factor w/ 51 levels \"Abies alba\",\"Abies grandis\",..: 1 2 3 14 42 4 5 6 7 8 ...\n#&gt;  $ fungus_names: Factor w/ 154 levels \"Amphiporthe leiphaemia\",..: 1 2 3 4 5 6 7 8 9 10 ...\n#&gt;  $ tree_tree   : num [1:51, 1:51] 0 12 9 3 2 2 0 0 2 7 ...\n#&gt;  $ fungus_tree : int [1:154, 1:51] 0 0 0 0 1 1 1 0 0 0 ...\n#&gt;  $ covar_tree  :List of 3\n\nThis data set provides information about \\(154\\) fungi sampled on \\(51\\) tree species. It is a list with the following entries:\n\ntree_names : list of the tree species names\nfungus_names: list of the fungus species names\ntree_tree : weighted tree-tree interactions (number of common fungal species two tree species host)\nfungus_tree : binary fungus-tree interactions\ncovar_tree : covariates associated to pairs of trees (namely genetic, taxonomic and geographic distances)\n\nWe first consider the tree-tree interactions resulting into a Simple Network. Then we consider the bipartite network between trees and fungi.",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html#b.-analysis-of-the-treetree-data",
    "href": "chapters/TutorialBM.html#b.-analysis-of-the-treetree-data",
    "title": "Tutorial on Stochastic Block Models",
    "section": "2.B. Analysis of the tree/tree data",
    "text": "2.B. Analysis of the tree/tree data\n\n2.B.1 Tree-tree binary interaction networks\nWe first consider the binary network where an edge is drawn between two trees when they do share a least one common fungi:\n\ntree_tree_binary &lt;- 1 * (fungusTreeNetwork$tree_tree != 0)\n\nThe simple function plotMyMatrix can be use to represent simple or bipartite SBM:\n\nplotMyMatrix(tree_tree_binary, dimLabels = list(row = 'tree', col = 'tree'))\n\n\n\n\n\n\n\n\nWe look for some latent structure of the network by adjusting a simple SBM with the function estimateSimpleSBM. We assume the our matrix is the realisation of the SBM: \\[\\begin{align*}\n(Z_i) \\text{ i.i.d.} \\qquad & Z_i \\sim \\mathcal{M}(1, \\pi) \\\\\n(Y_{ij}) \\text{ indep.} \\mid (Z_i) \\qquad & (Y_{ij} \\mid Z_i=k, Z_j = \\ell) \\sim \\mathcal{B}(\\alpha_{k\\ell})\n\\end{align*}\\] and infer this model with sbm (used package : blockmodels). Note that simpleSBM refers to standard networks (w.r.t. bipartite)\n\nmySimpleSBM &lt;- tree_tree_binary %&gt;%\n  estimateSimpleSBM(\"bernoulli\", \n                    dimLabels ='tree', \n                    estimOptions = list(verbosity = 2, plot=FALSE))\n#&gt; -&gt; Estimation for 1 groups\n#&gt; \n-&gt; Computation of eigen decomposition used for initalizations\n#&gt; \n#&gt; -&gt; Pass 1\n#&gt;     -&gt; With ascending number of groups\n#&gt; \n\n\n\n\n\n\n    -&gt; With descending number of groups\n#&gt; \n\n\n\n\n\n\n\n\n\n-&gt; Pass 2\n#&gt;     -&gt; With ascending number of groups\n#&gt; \n\n    -&gt; With descending number of groups\n#&gt; \n\n-&gt; Pass 3\n#&gt;     -&gt; With ascending number of groups\n#&gt;     -&gt; With descending number of groups\n\n\n\n\nICL for the Binary SBM\n\n\nOnce fitted, the user can manipulate the fitted model by accessing the various fields and methods enjoyed by the class simpleSBMfit. Most important fields and methods are recalled to the user via the show method:\n\nclass(mySimpleSBM)\n#&gt; [1] \"SimpleSBM_fit\" \"SimpleSBM\"     \"SBM\"           \"R6\"\n\nFor instance,\n\nmySimpleSBM$nbBlocks\n#&gt; [1] 5\nmySimpleSBM$nbNodes\n#&gt; tree \n#&gt;   51\nmySimpleSBM$nbCovariates\n#&gt; [1] 0\n\nThe plot method is available as a S3 or R6 method. The default represents the network data reordered according to the memberships estimated in the SBM\n\nplot(mySimpleSBM, type = \"data\", dimLabels = list(row = 'tree', col = 'tree'))\n\n\n\n\n\n\n\n\nOne can also plot the expected network which, in case of the Bernoulli model, corresponds to the probability of connection between any pair of nodes in the network.\n\nplot(mySimpleSBM, type = \"expected\",estimOptions=list(legend=TRUE))\n\n\n\n\n\n\n\n\nAbout model selection and choice of the number of blocks\nDuring the estimation, a certain range of models are explored corresponding to different number of blocks. By default, the best model in terms of Integrated Classification Likelihood is sent back. IN fact, all the model are stored internally. The user can have a quick glance at them via the $storedModels field:\n\nmySimpleSBM$storedModels %&gt;% kable()\n\n\n\n\nindexModel\nnbParams\nnbBlocks\nICL\nloglik\n\n\n\n\n1\n1\n1\n-883.3334\n-879.7581\n\n\n2\n4\n2\n-619.0799\n-606.3880\n\n\n3\n8\n3\n-537.5179\n-512.1339\n\n\n4\n13\n4\n-540.6318\n-498.9806\n\n\n5\n19\n5\n-520.6645\n-459.1706\n\n\n6\n26\n6\n-530.6278\n-445.7159\n\n\n7\n34\n7\n-544.0191\n-432.1138\n\n\n8\n43\n8\n-562.1450\n-419.6710\n\n\n\n\n\nWe can then what models are competitive in terms of model selection by checking the ICL\n\nmySimpleSBM$storedModels %&gt;%  \n  ggplot() + \n  aes(x = nbBlocks, y = ICL) + geom_line() + geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\nThe 4-block model could have been a good choice too, in place of the 5-block model. The user can update the current simpleSBMfit thanks to the the setModel method:\n\nmySimpleSBM$setModel(4)\nmySimpleSBM$nbBlocks\n#&gt; [1] 4\nmySimpleSBM$plot(type = 'expected')\n\n\n\n\n\n\n\n\nGoing back to the best model\n\nmySimpleSBM$setModel(5)\n\n\n\n2.B.3 Analysis of the weighted interaction network\nInstead of considering the binary network tree-tree we may consider the weighted network where the link between two trees is the number of fungi they share.\nWe plot the matrix with function plotMyMatrix:\n\ntree_tree &lt;- fungusTreeNetwork$tree_tree\nplotMyMatrix(tree_tree, dimLabels = list(row = 'tree', col = 'tree'))\n\n\n\n\n\n\n\n\nHere again, we look for some latent structure of the network by adjusting a simple SBM with the function estimateSimpleSBM, considering a Poisson distribution on the edges.\n\\[\\begin{align*}\n(Z_i) \\text{ i.i.d.} \\qquad & Z_i \\sim \\mathcal{M}(1, \\pi) \\\\\n(Y_{ij}) \\text{ indep.} \\mid (Z_i) \\qquad & (Y_{ij} \\mid Z_i=k, Z_j = \\ell) \\sim \\mathcal{P}(\\exp(\\alpha_{kl})) = \\mathcal{P}(\\lambda_{kl})\n\\end{align*}\\]\n\nmySimpleSBMPoisson &lt;- tree_tree %&gt;%\n  estimateSimpleSBM(\"poisson\", directed = FALSE,\n                    estimOptions = list(verbosity = 2 , plot = FALSE),\n                    dimLabels = c('tree'))\n#&gt; -&gt; Estimation for 1 groups\n#&gt; \n-&gt; Computation of eigen decomposition used for initalizations\n#&gt; \n#&gt; -&gt; Pass 1\n#&gt;     -&gt; With ascending number of groups\n#&gt; \n\n\n\n\n\n\n\n    -&gt; With descending number of groups\n#&gt; \n\n\n\n\n\n\n\n\n\n\n\n-&gt; Pass 2\n#&gt;     -&gt; With ascending number of groups\n#&gt; \n\n\n\n\n\n\n    -&gt; With descending number of groups\n#&gt; \n\n\n\n\n\n\n\n-&gt; Pass 3\n#&gt;     -&gt; With ascending number of groups\n#&gt; \n\n\n    -&gt; With descending number of groups\n#&gt; \n\n-&gt; Pass 4\n#&gt;     -&gt; With ascending number of groups\n#&gt;     -&gt; With descending number of groups\n\n\n\n\nICL for the Poisson SBM\n\n\nOnce fitted, the user can manipulate the fitted model by accessing the various fields and methods enjoyed by the class simpleSBMfit. Most important fields and methods are recalled to the user via the show method:\n\nclass(mySimpleSBMPoisson)\n#&gt; [1] \"SimpleSBM_fit\" \"SimpleSBM\"     \"SBM\"           \"R6\"\nmySimpleSBMPoisson\n#&gt; Fit of a Simple Stochastic Block Model -- poisson variant\n#&gt; =====================================================================\n#&gt; Dimension = ( 51 ) - ( 6 ) blocks and no covariate(s).\n#&gt; =====================================================================\n#&gt; * Useful fields \n#&gt;   $nbNodes, $modelName, $dimLabels, $nbBlocks, $nbCovariates, $nbDyads\n#&gt;   $blockProp, $connectParam, $covarParam, $covarList, $covarEffect \n#&gt;   $expectation, $indMemberships, $memberships \n#&gt; * R6 and S3 methods \n#&gt;   $rNetwork, $rMemberships, $rEdges, plot, print, coef \n#&gt; * Additional fields\n#&gt;   $probMemberships, $loglik, $ICL, $storedModels, \n#&gt; * Additional methods \n#&gt;   predict, fitted, $setModel, $reorder\n\nFor instance,\n\nmySimpleSBMPoisson$nbBlocks\n#&gt; [1] 6\nmySimpleSBMPoisson$nbNodes\n#&gt; tree \n#&gt;   51\nmySimpleSBMPoisson$nbCovariates\n#&gt; [1] 0\n\nWe now plot the matrix reordered according to the memberships estimated in the SBM\n\nplot(mySimpleSBMPoisson, type = \"data\")\n\n\n\n\n\n\n\n\nOne can also plot the expected network which, in case of the Poisson model, corresponds to the expectation of connection between any pair of nodes in the network.\n\nplot(mySimpleSBMPoisson, type = \"expected\")\n\n\n\n\n\n\n\n\nThe composition of the clusters/blocks are given by :\n\nlapply(1:mySimpleSBMPoisson$nbBlocks,\n       function(q){fungusTreeNetwork$tree_names[mySimpleSBMPoisson$memberships == q]})\n#&gt; [[1]]\n#&gt; [1] Abies alba                                   \n#&gt; [2] Abies grandis                                \n#&gt; [3] Cedrus spp (Cedrus atlantica, Cedrus libani) \n#&gt; [4] Larix decidua                                \n#&gt; [5] Picea excelsa                                \n#&gt; [6] Pinus nigra laricio                          \n#&gt; [7] Pinus pinaster                               \n#&gt; [8] Pinus sylvestris                             \n#&gt; [9] Pseudotsuga menziesii                        \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[2]]\n#&gt;  [1] Large Maples (Acer platanoides, Acer pseudoplatanus)                                                \n#&gt;  [2] Fagus silvatica                                                                                     \n#&gt;  [3] Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior)                                            \n#&gt;  [4] Juglans spp (Juglans nigra, Juglans regia)                                                          \n#&gt;  [5] Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids)\n#&gt;  [6] Prunus avium                                                                                        \n#&gt;  [7] Quercus petraea                                                                                     \n#&gt;  [8] Quercus robur                                                                                       \n#&gt;  [9] Quercus rubra                                                                                       \n#&gt; [10] Sorbus torminalis                                                                                   \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[3]]\n#&gt; [1] Abies nordmanniana Larix kaempferi    Picea sitchensis   Pinus halepensis  \n#&gt; [5] Pinus nigra nigra  Pinus strobus      Pinus uncinata    \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[4]]\n#&gt; [1] Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus) \n#&gt; [2] Alnus glutinosa                                                               \n#&gt; [3] Castanea sativa                                                               \n#&gt; [4] Quercus ilex                                                                  \n#&gt; [5] Quercus pubescens                                                             \n#&gt; [6] Quercus suber                                                                 \n#&gt; [7] Sorbus aria                                                                   \n#&gt; [8] Tilia spp (Tilia platiphyllos, Tilia cordata)                                 \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[5]]\n#&gt; [1] Cupressus sempervirens                            \n#&gt; [2] Pinus brutia (Pinus brutia, Pinus brutia eldarica)\n#&gt; [3] Pinus cembra                                      \n#&gt; [4] Pinus pinea                                       \n#&gt; [5] Pinus radiata                                     \n#&gt; [6] Pinus taeda                                       \n#&gt; [7] Platanus hybrida                                  \n#&gt; [8] Tsuga heterophylla                                \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[6]]\n#&gt; [1] Betulus spp (Betula pendula, Betula pubescens)      \n#&gt; [2] Carpinus betulus                                    \n#&gt; [3] Populus tremula                                     \n#&gt; [4] Quercus pyrenaica                                   \n#&gt; [5] Sorbus aucuparia                                    \n#&gt; [6] Sorbus domestica                                    \n#&gt; [7] Taxus baccata                                       \n#&gt; [8] Thuja plicata                                       \n#&gt; [9] Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra)\n\nWe are interested in comparing the two clusterings. To do so we use the alluvial flow plots.\n\nlistMemberships &lt;- list(binarySBM = mySimpleSBM$memberships)\nlistMemberships$weightSBM &lt;- mySimpleSBMPoisson$memberships\nP &lt;- plotAlluvial(listMemberships)\n\n\n\n\n\n\n\n\n\n\n2.B.4 Introduction of covariates\nWe have on each pair of trees 3 covariates, namely the genetic distance, the taxonomic distance and the geographic distance. Each covariate has to be introduced as a matrix: \\(X^k_{ij}\\) corresponds to the value of the \\(k\\)-th covariate describing the couple \\((i,j)\\).\nWe can also use the sbm package to estimate the parameters of the SBM with covariates.\n\\[\\begin{align*}\n(Z_i) \\text{ i.i.d.} \\qquad & Z_i \\sim \\mathcal{M}(1, \\pi) \\\\\n(Y_{ij}) \\text{ indep.} \\mid (Z_i) \\qquad & (Y_{ij} \\mid Z_i=k, Z_j = \\ell) \\sim \\mathcal{P}(\\exp(\\alpha_{kl} + x_{ij}^\\intercal \\theta)) = \\mathcal{P}(\\lambda_{kl}\\exp(x_{ij}^\\intercal \\theta))\n\\end{align*}\\]\n\nmySimpleSBMCov&lt;- estimateSimpleSBM(\n  netMat = as.matrix(tree_tree),\n  model = 'poisson',\n  directed =FALSE,\n  dimLabels =c('tree'), \n  covariates  = fungusTreeNetwork$covar_tree,\n  estimOptions = list(verbosity = 0))\n\n\n\n\nICL for the Poisson SBM with covariates\n\n\n\nWe select the best number of clusters (with respect to the ICL criteria)\n\n\nmySimpleSBMCov$nbBlocks\n#&gt; [1] 4\n\n\nWe can now extract the parameters of interest, namely (\\(\\lambda\\), \\(\\pi\\)) and the clustering of the nodes.\n\n\nmySimpleSBMCov$connnectParam\n#&gt; NULL\nmySimpleSBMCov$blockProp\n#&gt; [1] 0.3715916 0.2159544 0.2354120 0.1770421\nmySimpleSBMCov$memberships\n#&gt;  [1] 1 1 2 1 2 2 4 4 2 1 3 1 1 1 1 2 1 2 3 3 2 1 2 1 3 3 2 1 3 2 3 1 4 1 1 3 1 3\n#&gt; [39] 4 1 1 3 2 4 4 1 4 4 3 3 4\nmySimpleSBMCov$covarParam\n#&gt;            [,1]\n#&gt; [1,]  0.1977418\n#&gt; [2,] -2.0548142\n#&gt; [3,] -0.3579126\n\n\nThe composition of the clusters/blocks are given by:\n\n\n\nlapply(1:mySimpleSBMCov$nbBlocks,function(q){fungusTreeNetwork$tree_names[mySimpleSBMCov$memberships == q]})\n#&gt; [[1]]\n#&gt;  [1] Abies alba                                                                                          \n#&gt;  [2] Abies grandis                                                                                       \n#&gt;  [3] Large Maples (Acer platanoides, Acer pseudoplatanus)                                                \n#&gt;  [4] Cedrus spp (Cedrus atlantica, Cedrus libani)                                                        \n#&gt;  [5] Fagus silvatica                                                                                     \n#&gt;  [6] Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior)                                            \n#&gt;  [7] Juglans spp (Juglans nigra, Juglans regia)                                                          \n#&gt;  [8] Larix decidua                                                                                       \n#&gt;  [9] Picea excelsa                                                                                       \n#&gt; [10] Pinus nigra laricio                                                                                 \n#&gt; [11] Pinus pinaster                                                                                      \n#&gt; [12] Pinus sylvestris                                                                                    \n#&gt; [13] Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids)\n#&gt; [14] Prunus avium                                                                                        \n#&gt; [15] Pseudotsuga menziesii                                                                               \n#&gt; [16] Quercus petraea                                                                                     \n#&gt; [17] Quercus robur                                                                                       \n#&gt; [18] Quercus rubra                                                                                       \n#&gt; [19] Sorbus torminalis                                                                                   \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[2]]\n#&gt;  [1] Abies nordmanniana                                                            \n#&gt;  [2] Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus) \n#&gt;  [3] Alnus glutinosa                                                               \n#&gt;  [4] Castanea sativa                                                               \n#&gt;  [5] Larix kaempferi                                                               \n#&gt;  [6] Picea sitchensis                                                              \n#&gt;  [7] Pinus halepensis                                                              \n#&gt;  [8] Pinus nigra nigra                                                             \n#&gt;  [9] Pinus strobus                                                                 \n#&gt; [10] Pinus uncinata                                                                \n#&gt; [11] Sorbus aria                                                                   \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[3]]\n#&gt;  [1] Cupressus sempervirens                            \n#&gt;  [2] Pinus brutia (Pinus brutia, Pinus brutia eldarica)\n#&gt;  [3] Pinus cembra                                      \n#&gt;  [4] Pinus pinea                                       \n#&gt;  [5] Pinus radiata                                     \n#&gt;  [6] Pinus taeda                                       \n#&gt;  [7] Platanus hybrida                                  \n#&gt;  [8] Quercus ilex                                      \n#&gt;  [9] Quercus pubescens                                 \n#&gt; [10] Quercus suber                                     \n#&gt; [11] Tilia spp (Tilia platiphyllos, Tilia cordata)     \n#&gt; [12] Tsuga heterophylla                                \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; \n#&gt; [[4]]\n#&gt; [1] Betulus spp (Betula pendula, Betula pubescens)      \n#&gt; [2] Carpinus betulus                                    \n#&gt; [3] Populus tremula                                     \n#&gt; [4] Quercus pyrenaica                                   \n#&gt; [5] Sorbus aucuparia                                    \n#&gt; [6] Sorbus domestica                                    \n#&gt; [7] Taxus baccata                                       \n#&gt; [8] Thuja plicata                                       \n#&gt; [9] Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \n#&gt; 51 Levels: Abies alba Abies grandis Abies nordmanniana ... Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra)\n\nWe are interested in comparing the three cluterings. To do so we use the alluvial flow plots\n\nlistMemberships &lt;- list(binary = mySimpleSBM$memberships)\nlistMemberships$weighted &lt;- mySimpleSBMPoisson$memberships\nlistMemberships$weightedCov &lt;- mySimpleSBMCov$memberships\nplotAlluvial(listMemberships)\n\n\n\n\n\n\n\n#&gt; $plotOptions\n#&gt; $plotOptions$curvy\n#&gt; [1] 0.3\n#&gt; \n#&gt; $plotOptions$alpha\n#&gt; [1] 0.8\n#&gt; \n#&gt; $plotOptions$gap.width\n#&gt; [1] 0.1\n#&gt; \n#&gt; $plotOptions$col\n#&gt; [1] \"darkolivegreen3\"\n#&gt; \n#&gt; $plotOptions$border\n#&gt; [1] \"white\"\n#&gt; \n#&gt; \n#&gt; $tableFreq\n#&gt;     binary weighted weightedCov Freq\n#&gt; 1        1        1           1    9\n#&gt; 6        1        2           1    1\n#&gt; 7        2        2           1    9\n#&gt; 41       1        3           2    5\n#&gt; 43       3        3           2    2\n#&gt; 46       1        4           2    1\n#&gt; 49       4        4           2    3\n#&gt; 79       4        4           3    4\n#&gt; 81       1        5           3    1\n#&gt; 83       3        5           3    5\n#&gt; 84       4        5           3    2\n#&gt; 120      5        6           4    9",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html#c-analysis-of-the-treefungi-data",
    "href": "chapters/TutorialBM.html#c-analysis-of-the-treefungi-data",
    "title": "Tutorial on Stochastic Block Models",
    "section": "2.C Analysis of the tree/fungi data",
    "text": "2.C Analysis of the tree/fungi data\nWe now analyze the bipartite tree/fungi interactions. The incidence matrix can be plotted with the function \n\nplotMyMatrix(fungusTreeNetwork$fungus_tree, dimLabels=list(row = 'fungis',col = 'tree'))\n\n\n\n\n\n\n\n\nWe set the following model:\n\\[\\begin{align*}\n(Z^R_i) \\text{ i.i.d.} \\qquad & Z^R_i \\sim \\mathcal{M}(1, \\pi^R) \\\\\n  (Z^C_i) \\text{ i.i.d.} \\qquad & Z^C_i \\sim \\mathcal{M}(1, \\pi^C) \\\\\n\n(Y_{ij}) \\text{ indep.} \\mid (Z^R_i, Z^C_j) \\qquad & (Y_{ij} \\mid Z^R_i=k, Z^C_j = \\ell) \\sim \\mathcal{B}(\\alpha_{k\\ell})\n\\end{align*}\\]\n\nmyBipartiteSBM &lt;- estimateBipartiteSBM(\n  netMat = as.matrix(fungusTreeNetwork$fungus_tree),\n  model = 'bernoulli',\n  dimLabels=c(row = 'fungis',col = 'tree'),\n  estimOptions = list(verbosity = 1,plot = FALSE))\n#&gt; -&gt; Estimation for 2 groups (1+1)\n#&gt; \n-&gt; Computation of eigen decomposition used for initalizations\n#&gt; \n#&gt; -&gt; Pass 1\n#&gt; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-&gt; Pass 2\n#&gt; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-&gt; Pass 3\n#&gt; \n\n\n\nmyBipartiteSBM$nbNodes\n#&gt; fungis   tree \n#&gt;    154     51\nmyBipartiteSBM$nbBlocks\n#&gt; fungis   tree \n#&gt;      4      4\nmyBipartiteSBM$connectParam\n#&gt; $mean\n#&gt;            [,1]        [,2]        [,3]        [,4]\n#&gt; [1,] 0.96813478 0.077538579 0.840370657 0.067563355\n#&gt; [2,] 0.52055882 0.584398216 0.230893917 0.107930384\n#&gt; [3,] 0.32450427 0.003624764 0.098526840 0.005780612\n#&gt; [4,] 0.01834547 0.154334411 0.001330278 0.019219920\n\nWe can now plot the reorganized matrix.\n\nplot(myBipartiteSBM, type = \"data\")\n\n\n\n\n\n\n\n\n\nplot(myBipartiteSBM, type = \"expected\")",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialBM.html#references",
    "href": "chapters/TutorialBM.html#references",
    "title": "Tutorial on Stochastic Block Models",
    "section": "References",
    "text": "References\n\n\n\n\nThompson, R. M., and C. R. Townsend. 2003. “IMPACTS ON STREAM FOOD WEBS OF NATIVE AND EXOTIC FOREST: AN INTERCONTINENTAL COMPARISON.” Ecology 84 (1): 145–61. https://doi.org/https://doi.org/10.1890/0012-9658(2003)084[0145:IOSFWO]2.0.CO;2.\n\n\nVacher, Corinne, Dominique Piou, and Marie-Laure Desprez-Loustau. 2008. “Architecture of an Antagonistic Tree/Fungus Network: The Asymmetric Influence of Past Evolutionary History.” PloS One 3 (3): e1740.",
    "crumbs": [
      "EXERCISES",
      "(d3) SBM"
    ]
  },
  {
    "objectID": "chapters/TutorialDattilo.html",
    "href": "chapters/TutorialDattilo.html",
    "title": "Tutorial on Multipartite block models",
    "section": "",
    "text": "0.Requirements\nThis tutorial illustrates the use of block models for the analysis of (ecological) multipartite network. Is is mainly based on a vignette of the package sbm . The package is on the CRAN. Its development version is on Github. It as been installed earlier during the week.\ninstall.packages(\"sbm\")\nlibrary(sbm)\nlibrary(ggplot2)",
    "crumbs": [
      "EXERCISES",
      "(d4) multilevel"
    ]
  },
  {
    "objectID": "chapters/TutorialDattilo.html#references",
    "href": "chapters/TutorialDattilo.html#references",
    "title": "Tutorial on Multipartite block models",
    "section": "References",
    "text": "References\n\n\n\n\nBar-Hen, Avner, Pierre Barbillon, and Sophie Donnet. 2022. “Block Models for Generalized Multipartite Networks: Applications in Ecology and Ethnobiology.” Statistical Modelling 22 (4): 273–96. https://doi.org/10.1177/1471082X20963254.\n\n\nDáttilo, Wesley, Nubia Lara-Rodrı́guez, Pedro Jordano, Paulo R. Guimarães, John N. Thompson, Robert J. Marquis, Lucas P. Medeiros, Raul Ortiz-Pulido, Maria A. Marcos-Garcı́a, and Victor Rico-Gray. 2016. “Unravelling Darwin’s Entangled Bank: Architecture and Robustness of Mutualistic Networks with Multiple Interaction Types.” Proceedings of the Royal Society of London B: Biological Sciences 283 (1843).",
    "crumbs": [
      "EXERCISES",
      "(d4) multilevel"
    ]
  }
]